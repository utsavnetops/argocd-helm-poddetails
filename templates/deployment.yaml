apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-flask-k8s-app
  namespace: {{ index .Values.environments .Values.environmentName "namespace" }}
  labels:
    app: flask-k8s-app
spec:
  replicas: {{ index .Values.environments .Values.environmentName "replicaCount" }}
  selector:
    matchLabels:
      app: flask-k8s-app
  template:
    metadata:
      labels:
        app: flask-k8s-app
    spec:
      containers:
        - name: flask-k8s-app
          image: {{ .Values.image.repository }}:{{ index .Values.environments .Values.environmentName "image" "tag" }}
          ports:
            - containerPort: 5000
          env:
            - name: MONGODB_HOST
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials # Replace with your secret name
                  key: host # Replace with the actual key in your secret
            - name: MONGODB_PORT
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials # Replace with your secret name
                  key: port # Replace with the actual key in your secret
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials # Replace with your secret name
                  key: username # Replace with the actual key in your secret
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-credentials # Replace with your secret name
                  key: password # Replace with the actual key in your secret
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName # Dynamically fetch the node name
